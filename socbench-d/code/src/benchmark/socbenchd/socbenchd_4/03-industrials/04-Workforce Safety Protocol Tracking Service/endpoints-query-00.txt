SUMMARY:
List the 10 most important endpoints for the given service.

DOCUMENT:
Domain:
Industrials Sector: The Industrials Sector includes manufacturers and distributors of capital goods such as aerospace & defense, building products, electrical equipment and machinery and companies that offer construction & engineering services. It also includes providers of commercial & professional services including printing, environmental and facilities services, office services & supplies, security & alarm services, human resource & employment services, research & consulting services. It also includes companies that provide transportation services.

Service:
Ensuring workplace safety is crucial in industrial applications. This service tracks compliance with safety guidelines using data recorded by on-site devices. It provides detailed alerts for non-compliance incidents and generates safety improvement certificates. Accessible by HR and safety officers, its API enables integration into internal reporting tools. For instance, an infrastructure manager could analyze data revealing higher-than-average safety incidents at site X, prompting targeted interventions.

Previous endpoints:


TASK:
Given the description of the service, please think what could be the 10 most important endpoints of the service.

EXAMPLE:
{
    "endpoints": [
        {
            "endpoint": "GET /sensors",
            "description": "Retrieve the list of all available sensors."
        }
        ...
    ]
}

INSTRUCTIONS:
You are given a domain and a corresponding service. You are tasked to list endpoints for a given service. These should be specific for the service. The previously created endpoints are given. You can decide which endpoints these are. Align them with the service description. Avoid generic endpoints not related to the domain like authentication or user management. List them as "Verb Path" and add an extensive description as JSON. The endpoints should be different from the already previous ones. Make sure that the endpoints are consistent, compatible with each other, and in total create a self-contained service.
