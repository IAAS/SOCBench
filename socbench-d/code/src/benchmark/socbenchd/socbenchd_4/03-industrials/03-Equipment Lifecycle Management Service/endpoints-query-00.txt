SUMMARY:
List the 10 most important endpoints for the given service.

DOCUMENT:
Domain:
Industrials Sector: The Industrials Sector includes manufacturers and distributors of capital goods such as aerospace & defense, building products, electrical equipment and machinery and companies that offer construction & engineering services. It also includes providers of commercial & professional services including printing, environmental and facilities services, office services & supplies, security & alarm services, human resource & employment services, research & consulting services. It also includes companies that provide transportation services.

Service:
This API-based service tracks and optimizes the lifecycle of industrial machinery. By monitoring maintenance schedules, performance metrics, and operational history, the service aims to reduce downtime and extend equipment lifespans. Features include alert systems for upcoming maintenance and analytics for cost and benefit assessments. Users can access dashboards highlighting critical statuses. As an example, a factory utilizing machinery A can receive a reminder for scheduled maintenance and access insights demonstrating the operational efficiency.

Previous endpoints:


TASK:
Given the description of the service, please think what could be the 10 most important endpoints of the service.

EXAMPLE:
{
    "endpoints": [
        {
            "endpoint": "GET /sensors",
            "description": "Retrieve the list of all available sensors."
        }
        ...
    ]
}

INSTRUCTIONS:
You are given a domain and a corresponding service. You are tasked to list endpoints for a given service. These should be specific for the service. The previously created endpoints are given. You can decide which endpoints these are. Align them with the service description. Avoid generic endpoints not related to the domain like authentication or user management. List them as "Verb Path" and add an extensive description as JSON. The endpoints should be different from the already previous ones. Make sure that the endpoints are consistent, compatible with each other, and in total create a self-contained service.
